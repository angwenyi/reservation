#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResevationSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HM2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIResource(IResource instance);
    partial void UpdateIResource(IResource instance);
    partial void DeleteIResource(IResource instance);
    partial void InsertILocation(ILocation instance);
    partial void UpdateILocation(ILocation instance);
    partial void DeleteILocation(ILocation instance);
    partial void InsertICategory(ICategory instance);
    partial void UpdateICategory(ICategory instance);
    partial void DeleteICategory(ICategory instance);
    partial void InsertIFacility(IFacility instance);
    partial void UpdateIFacility(IFacility instance);
    partial void DeleteIFacility(IFacility instance);
    partial void InsertHiredFacility(HiredFacility instance);
    partial void UpdateHiredFacility(HiredFacility instance);
    partial void DeleteHiredFacility(HiredFacility instance);
    partial void InsertIRoom(IRoom instance);
    partial void UpdateIRoom(IRoom instance);
    partial void DeleteIRoom(IRoom instance);
    partial void InsertITypeRoomCust(ITypeRoomCust instance);
    partial void UpdateITypeRoomCust(ITypeRoomCust instance);
    partial void DeleteITypeRoomCust(ITypeRoomCust instance);
    partial void InsertISport(ISport instance);
    partial void UpdateISport(ISport instance);
    partial void DeleteISport(ISport instance);
    partial void InsertICorporate(ICorporate instance);
    partial void UpdateICorporate(ICorporate instance);
    partial void DeleteICorporate(ICorporate instance);
    partial void InsertIndividual(Individual instance);
    partial void UpdateIndividual(Individual instance);
    partial void DeleteIndividual(Individual instance);
    partial void InsertIBooking(IBooking instance);
    partial void UpdateIBooking(IBooking instance);
    partial void DeleteIBooking(IBooking instance);
    partial void InsertIFunction(IFunction instance);
    partial void UpdateIFunction(IFunction instance);
    partial void DeleteIFunction(IFunction instance);
    partial void InsertXtra(Xtra instance);
    partial void UpdateXtra(Xtra instance);
    partial void DeleteXtra(Xtra instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ResevationSystem.Properties.Settings.Default.HM2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IResource> IResources
		{
			get
			{
				return this.GetTable<IResource>();
			}
		}
		
		public System.Data.Linq.Table<ILocation> ILocations
		{
			get
			{
				return this.GetTable<ILocation>();
			}
		}
		
		public System.Data.Linq.Table<ICategory> ICategories
		{
			get
			{
				return this.GetTable<ICategory>();
			}
		}
		
		public System.Data.Linq.Table<IFacility> IFacilities
		{
			get
			{
				return this.GetTable<IFacility>();
			}
		}
		
		public System.Data.Linq.Table<HiredFacility> HiredFacilities
		{
			get
			{
				return this.GetTable<HiredFacility>();
			}
		}
		
		public System.Data.Linq.Table<IRoom> IRooms
		{
			get
			{
				return this.GetTable<IRoom>();
			}
		}
		
		public System.Data.Linq.Table<ITypeRoomCust> ITypeRoomCusts
		{
			get
			{
				return this.GetTable<ITypeRoomCust>();
			}
		}
		
		public System.Data.Linq.Table<ISport> ISports
		{
			get
			{
				return this.GetTable<ISport>();
			}
		}
		
		public System.Data.Linq.Table<ICorporate> ICorporates
		{
			get
			{
				return this.GetTable<ICorporate>();
			}
		}
		
		public System.Data.Linq.Table<Individual> Individuals
		{
			get
			{
				return this.GetTable<Individual>();
			}
		}
		
		public System.Data.Linq.Table<IBooking> IBookings
		{
			get
			{
				return this.GetTable<IBooking>();
			}
		}
		
		public System.Data.Linq.Table<IFunction> IFunctions
		{
			get
			{
				return this.GetTable<IFunction>();
			}
		}
		
		public System.Data.Linq.Table<Xtra> Xtras
		{
			get
			{
				return this.GetTable<Xtra>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IResource")]
	public partial class IResource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IResourceID;
		
		private string _Resource;
		
		private decimal _Cost;
		
		private System.Nullable<decimal> _TotalCost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIResourceIDChanging(long value);
    partial void OnIResourceIDChanged();
    partial void OnResourceChanging(string value);
    partial void OnResourceChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    #endregion
		
		public IResource()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IResourceID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IResourceID
		{
			get
			{
				return this._IResourceID;
			}
			set
			{
				if ((this._IResourceID != value))
				{
					this.OnIResourceIDChanging(value);
					this.SendPropertyChanging();
					this._IResourceID = value;
					this.SendPropertyChanged("IResourceID");
					this.OnIResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Resource
		{
			get
			{
				return this._Resource;
			}
			set
			{
				if ((this._Resource != value))
				{
					this.OnResourceChanging(value);
					this.SendPropertyChanging();
					this._Resource = value;
					this.SendPropertyChanged("Resource");
					this.OnResourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ILocation")]
	public partial class ILocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LocationID;
		
		private string _Location;
		
		private EntitySet<ICategory> _ICategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocationIDChanging(int value);
    partial void OnLocationIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    #endregion
		
		public ILocation()
		{
			this._ICategories = new EntitySet<ICategory>(new Action<ICategory>(this.attach_ICategories), new Action<ICategory>(this.detach_ICategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ILocation_ICategory", Storage="_ICategories", ThisKey="LocationID", OtherKey="ILocationID")]
		public EntitySet<ICategory> ICategories
		{
			get
			{
				return this._ICategories;
			}
			set
			{
				this._ICategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ICategories(ICategory entity)
		{
			this.SendPropertyChanging();
			entity.ILocation = this;
		}
		
		private void detach_ICategories(ICategory entity)
		{
			this.SendPropertyChanging();
			entity.ILocation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICategories")]
	public partial class ICategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _categoriesID;
		
		private string _Categories;
		
		private System.Nullable<int> _ILocationID;
		
		private EntitySet<IFacility> _IFacilities;
		
		private EntityRef<ILocation> _ILocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoriesIDChanging(int value);
    partial void OncategoriesIDChanged();
    partial void OnCategoriesChanging(string value);
    partial void OnCategoriesChanged();
    partial void OnILocationIDChanging(System.Nullable<int> value);
    partial void OnILocationIDChanged();
    #endregion
		
		public ICategory()
		{
			this._IFacilities = new EntitySet<IFacility>(new Action<IFacility>(this.attach_IFacilities), new Action<IFacility>(this.detach_IFacilities));
			this._ILocation = default(EntityRef<ILocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoriesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoriesID
		{
			get
			{
				return this._categoriesID;
			}
			set
			{
				if ((this._categoriesID != value))
				{
					this.OncategoriesIDChanging(value);
					this.SendPropertyChanging();
					this._categoriesID = value;
					this.SendPropertyChanged("categoriesID");
					this.OncategoriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="NChar(50)")]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this.OnCategoriesChanging(value);
					this.SendPropertyChanging();
					this._Categories = value;
					this.SendPropertyChanged("Categories");
					this.OnCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ILocationID", DbType="Int")]
		public System.Nullable<int> ILocationID
		{
			get
			{
				return this._ILocationID;
			}
			set
			{
				if ((this._ILocationID != value))
				{
					if (this._ILocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnILocationIDChanging(value);
					this.SendPropertyChanging();
					this._ILocationID = value;
					this.SendPropertyChanged("ILocationID");
					this.OnILocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICategory_IFacility", Storage="_IFacilities", ThisKey="categoriesID", OtherKey="CategoryID")]
		public EntitySet<IFacility> IFacilities
		{
			get
			{
				return this._IFacilities;
			}
			set
			{
				this._IFacilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ILocation_ICategory", Storage="_ILocation", ThisKey="ILocationID", OtherKey="LocationID", IsForeignKey=true)]
		public ILocation ILocation
		{
			get
			{
				return this._ILocation.Entity;
			}
			set
			{
				ILocation previousValue = this._ILocation.Entity;
				if (((previousValue != value) 
							|| (this._ILocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ILocation.Entity = null;
						previousValue.ICategories.Remove(this);
					}
					this._ILocation.Entity = value;
					if ((value != null))
					{
						value.ICategories.Add(this);
						this._ILocationID = value.LocationID;
					}
					else
					{
						this._ILocationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ILocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IFacilities(IFacility entity)
		{
			this.SendPropertyChanging();
			entity.ICategory = this;
		}
		
		private void detach_IFacilities(IFacility entity)
		{
			this.SendPropertyChanging();
			entity.ICategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IFacility")]
	public partial class IFacility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacilityID;
		
		private string _FacilityName;
		
		private System.Nullable<decimal> _Price;
		
		private string _Description;
		
		private System.Nullable<int> _CategoryID;
		
		private EntityRef<ICategory> _ICategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacilityIDChanging(int value);
    partial void OnFacilityIDChanged();
    partial void OnFacilityNameChanging(string value);
    partial void OnFacilityNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryIDChanging(System.Nullable<int> value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public IFacility()
		{
			this._ICategory = default(EntityRef<ICategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacilityID
		{
			get
			{
				return this._FacilityID;
			}
			set
			{
				if ((this._FacilityID != value))
				{
					this.OnFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._FacilityID = value;
					this.SendPropertyChanged("FacilityID");
					this.OnFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NChar(50)")]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this.OnFacilityNameChanging(value);
					this.SendPropertyChanging();
					this._FacilityName = value;
					this.SendPropertyChanged("FacilityName");
					this.OnFacilityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int")]
		public System.Nullable<int> CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ICategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ICategory_IFacility", Storage="_ICategory", ThisKey="CategoryID", OtherKey="categoriesID", IsForeignKey=true)]
		public ICategory ICategory
		{
			get
			{
				return this._ICategory.Entity;
			}
			set
			{
				ICategory previousValue = this._ICategory.Entity;
				if (((previousValue != value) 
							|| (this._ICategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICategory.Entity = null;
						previousValue.IFacilities.Remove(this);
					}
					this._ICategory.Entity = value;
					if ((value != null))
					{
						value.IFacilities.Add(this);
						this._CategoryID = value.categoriesID;
					}
					else
					{
						this._CategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ICategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HiredFacilities")]
	public partial class HiredFacility : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TFacilityID;
		
		private string _TFacility;
		
		private System.Nullable<decimal> _TPricing;
		
		private System.Nullable<decimal> _HQuantity;
		
		private string _Description;
		
		private System.Nullable<int> _FunctionID;
		
		private EntityRef<IFunction> _IFunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTFacilityIDChanging(int value);
    partial void OnTFacilityIDChanged();
    partial void OnTFacilityChanging(string value);
    partial void OnTFacilityChanged();
    partial void OnTPricingChanging(System.Nullable<decimal> value);
    partial void OnTPricingChanged();
    partial void OnHQuantityChanging(System.Nullable<decimal> value);
    partial void OnHQuantityChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFunctionIDChanging(System.Nullable<int> value);
    partial void OnFunctionIDChanged();
    #endregion
		
		public HiredFacility()
		{
			this._IFunction = default(EntityRef<IFunction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFacilityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TFacilityID
		{
			get
			{
				return this._TFacilityID;
			}
			set
			{
				if ((this._TFacilityID != value))
				{
					this.OnTFacilityIDChanging(value);
					this.SendPropertyChanging();
					this._TFacilityID = value;
					this.SendPropertyChanged("TFacilityID");
					this.OnTFacilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TFacility", DbType="NChar(50)")]
		public string TFacility
		{
			get
			{
				return this._TFacility;
			}
			set
			{
				if ((this._TFacility != value))
				{
					this.OnTFacilityChanging(value);
					this.SendPropertyChanging();
					this._TFacility = value;
					this.SendPropertyChanged("TFacility");
					this.OnTFacilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPricing", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TPricing
		{
			get
			{
				return this._TPricing;
			}
			set
			{
				if ((this._TPricing != value))
				{
					this.OnTPricingChanging(value);
					this.SendPropertyChanging();
					this._TPricing = value;
					this.SendPropertyChanged("TPricing");
					this.OnTPricingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HQuantity", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> HQuantity
		{
			get
			{
				return this._HQuantity;
			}
			set
			{
				if ((this._HQuantity != value))
				{
					this.OnHQuantityChanging(value);
					this.SendPropertyChanging();
					this._HQuantity = value;
					this.SendPropertyChanged("HQuantity");
					this.OnHQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionID", DbType="Int")]
		public System.Nullable<int> FunctionID
		{
			get
			{
				return this._FunctionID;
			}
			set
			{
				if ((this._FunctionID != value))
				{
					if (this._IFunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._FunctionID = value;
					this.SendPropertyChanged("FunctionID");
					this.OnFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IFunction_HiredFacility", Storage="_IFunction", ThisKey="FunctionID", OtherKey="FunctionID", IsForeignKey=true)]
		public IFunction IFunction
		{
			get
			{
				return this._IFunction.Entity;
			}
			set
			{
				IFunction previousValue = this._IFunction.Entity;
				if (((previousValue != value) 
							|| (this._IFunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IFunction.Entity = null;
						previousValue.HiredFacilities.Remove(this);
					}
					this._IFunction.Entity = value;
					if ((value != null))
					{
						value.HiredFacilities.Add(this);
						this._FunctionID = value.FunctionID;
					}
					else
					{
						this._FunctionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("IFunction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IRoom")]
	public partial class IRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IRoomID;
		
		private string _RoomType;
		
		private string _RoomState;
		
		private decimal _RoomCost;
		
		private string _IRoomNumber;
		
		private System.Nullable<int> _IBookingID;
		
		private System.Nullable<bool> _isAvailable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIRoomIDChanging(int value);
    partial void OnIRoomIDChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    partial void OnRoomStateChanging(string value);
    partial void OnRoomStateChanged();
    partial void OnRoomCostChanging(decimal value);
    partial void OnRoomCostChanged();
    partial void OnIRoomNumberChanging(string value);
    partial void OnIRoomNumberChanged();
    partial void OnIBookingIDChanging(System.Nullable<int> value);
    partial void OnIBookingIDChanged();
    partial void OnisAvailableChanging(System.Nullable<bool> value);
    partial void OnisAvailableChanged();
    #endregion
		
		public IRoom()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IRoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IRoomID
		{
			get
			{
				return this._IRoomID;
			}
			set
			{
				if ((this._IRoomID != value))
				{
					this.OnIRoomIDChanging(value);
					this.SendPropertyChanging();
					this._IRoomID = value;
					this.SendPropertyChanged("IRoomID");
					this.OnIRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomState", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string RoomState
		{
			get
			{
				return this._RoomState;
			}
			set
			{
				if ((this._RoomState != value))
				{
					this.OnRoomStateChanging(value);
					this.SendPropertyChanging();
					this._RoomState = value;
					this.SendPropertyChanged("RoomState");
					this.OnRoomStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCost", DbType="Decimal(18,0) NOT NULL")]
		public decimal RoomCost
		{
			get
			{
				return this._RoomCost;
			}
			set
			{
				if ((this._RoomCost != value))
				{
					this.OnRoomCostChanging(value);
					this.SendPropertyChanging();
					this._RoomCost = value;
					this.SendPropertyChanged("RoomCost");
					this.OnRoomCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IRoomNumber", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string IRoomNumber
		{
			get
			{
				return this._IRoomNumber;
			}
			set
			{
				if ((this._IRoomNumber != value))
				{
					this.OnIRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._IRoomNumber = value;
					this.SendPropertyChanged("IRoomNumber");
					this.OnIRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IBookingID", DbType="Int")]
		public System.Nullable<int> IBookingID
		{
			get
			{
				return this._IBookingID;
			}
			set
			{
				if ((this._IBookingID != value))
				{
					this.OnIBookingIDChanging(value);
					this.SendPropertyChanging();
					this._IBookingID = value;
					this.SendPropertyChanged("IBookingID");
					this.OnIBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAvailable", DbType="Bit")]
		public System.Nullable<bool> isAvailable
		{
			get
			{
				return this._isAvailable;
			}
			set
			{
				if ((this._isAvailable != value))
				{
					this.OnisAvailableChanging(value);
					this.SendPropertyChanging();
					this._isAvailable = value;
					this.SendPropertyChanged("isAvailable");
					this.OnisAvailableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITypeRoomCust")]
	public partial class ITypeRoomCust : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _Type;
		
		private EntitySet<ISport> _ISports;
		
		private EntitySet<ICorporate> _ICorporates;
		
		private EntitySet<Individual> _Individuals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public ITypeRoomCust()
		{
			this._ISports = new EntitySet<ISport>(new Action<ISport>(this.attach_ISports), new Action<ISport>(this.detach_ISports));
			this._ICorporates = new EntitySet<ICorporate>(new Action<ICorporate>(this.attach_ICorporates), new Action<ICorporate>(this.detach_ICorporates));
			this._Individuals = new EntitySet<Individual>(new Action<Individual>(this.attach_Individuals), new Action<Individual>(this.detach_Individuals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_ISport", Storage="_ISports", ThisKey="TypeID", OtherKey="ITypeRoomCust")]
		public EntitySet<ISport> ISports
		{
			get
			{
				return this._ISports;
			}
			set
			{
				this._ISports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_ICorporate", Storage="_ICorporates", ThisKey="TypeID", OtherKey="ITypeRoomCust")]
		public EntitySet<ICorporate> ICorporates
		{
			get
			{
				return this._ICorporates;
			}
			set
			{
				this._ICorporates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_Individual", Storage="_Individuals", ThisKey="TypeID", OtherKey="ITypeRoomCust")]
		public EntitySet<Individual> Individuals
		{
			get
			{
				return this._Individuals;
			}
			set
			{
				this._Individuals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ISports(ISport entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = this;
		}
		
		private void detach_ISports(ISport entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = null;
		}
		
		private void attach_ICorporates(ICorporate entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = this;
		}
		
		private void detach_ICorporates(ICorporate entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = null;
		}
		
		private void attach_Individuals(Individual entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = this;
		}
		
		private void detach_Individuals(Individual entity)
		{
			this.SendPropertyChanging();
			entity.ITypeRoomCust1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ISports")]
	public partial class ISport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SportgroupID;
		
		private string _Type;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _ITypeRoomCust;
		
		private EntityRef<ITypeRoomCust> _ITypeRoomCust1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSportgroupIDChanging(int value);
    partial void OnSportgroupIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnITypeRoomCustChanging(System.Nullable<int> value);
    partial void OnITypeRoomCustChanged();
    #endregion
		
		public ISport()
		{
			this._ITypeRoomCust1 = default(EntityRef<ITypeRoomCust>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SportgroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SportgroupID
		{
			get
			{
				return this._SportgroupID;
			}
			set
			{
				if ((this._SportgroupID != value))
				{
					this.OnSportgroupIDChanging(value);
					this.SendPropertyChanging();
					this._SportgroupID = value;
					this.SendPropertyChanged("SportgroupID");
					this.OnSportgroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITypeRoomCust", DbType="Int")]
		public System.Nullable<int> ITypeRoomCust
		{
			get
			{
				return this._ITypeRoomCust;
			}
			set
			{
				if ((this._ITypeRoomCust != value))
				{
					if (this._ITypeRoomCust1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITypeRoomCustChanging(value);
					this.SendPropertyChanging();
					this._ITypeRoomCust = value;
					this.SendPropertyChanged("ITypeRoomCust");
					this.OnITypeRoomCustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_ISport", Storage="_ITypeRoomCust1", ThisKey="ITypeRoomCust", OtherKey="TypeID", IsForeignKey=true)]
		public ITypeRoomCust ITypeRoomCust1
		{
			get
			{
				return this._ITypeRoomCust1.Entity;
			}
			set
			{
				ITypeRoomCust previousValue = this._ITypeRoomCust1.Entity;
				if (((previousValue != value) 
							|| (this._ITypeRoomCust1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITypeRoomCust1.Entity = null;
						previousValue.ISports.Remove(this);
					}
					this._ITypeRoomCust1.Entity = value;
					if ((value != null))
					{
						value.ISports.Add(this);
						this._ITypeRoomCust = value.TypeID;
					}
					else
					{
						this._ITypeRoomCust = default(Nullable<int>);
					}
					this.SendPropertyChanged("ITypeRoomCust1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICorporate")]
	public partial class ICorporate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCorporate;
		
		private string _Type;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _ITypeRoomCust;
		
		private EntityRef<ITypeRoomCust> _ITypeRoomCust1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCorporateChanging(int value);
    partial void OnIDCorporateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnITypeRoomCustChanging(System.Nullable<int> value);
    partial void OnITypeRoomCustChanged();
    #endregion
		
		public ICorporate()
		{
			this._ITypeRoomCust1 = default(EntityRef<ITypeRoomCust>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCorporate", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCorporate
		{
			get
			{
				return this._IDCorporate;
			}
			set
			{
				if ((this._IDCorporate != value))
				{
					this.OnIDCorporateChanging(value);
					this.SendPropertyChanging();
					this._IDCorporate = value;
					this.SendPropertyChanged("IDCorporate");
					this.OnIDCorporateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITypeRoomCust", DbType="Int")]
		public System.Nullable<int> ITypeRoomCust
		{
			get
			{
				return this._ITypeRoomCust;
			}
			set
			{
				if ((this._ITypeRoomCust != value))
				{
					if (this._ITypeRoomCust1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITypeRoomCustChanging(value);
					this.SendPropertyChanging();
					this._ITypeRoomCust = value;
					this.SendPropertyChanged("ITypeRoomCust");
					this.OnITypeRoomCustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_ICorporate", Storage="_ITypeRoomCust1", ThisKey="ITypeRoomCust", OtherKey="TypeID", IsForeignKey=true)]
		public ITypeRoomCust ITypeRoomCust1
		{
			get
			{
				return this._ITypeRoomCust1.Entity;
			}
			set
			{
				ITypeRoomCust previousValue = this._ITypeRoomCust1.Entity;
				if (((previousValue != value) 
							|| (this._ITypeRoomCust1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITypeRoomCust1.Entity = null;
						previousValue.ICorporates.Remove(this);
					}
					this._ITypeRoomCust1.Entity = value;
					if ((value != null))
					{
						value.ICorporates.Add(this);
						this._ITypeRoomCust = value.TypeID;
					}
					else
					{
						this._ITypeRoomCust = default(Nullable<int>);
					}
					this.SendPropertyChanged("ITypeRoomCust1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Individual")]
	public partial class Individual : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IndividualID;
		
		private string _Type;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _ITypeRoomCust;
		
		private EntityRef<ITypeRoomCust> _ITypeRoomCust1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndividualIDChanging(int value);
    partial void OnIndividualIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnITypeRoomCustChanging(System.Nullable<int> value);
    partial void OnITypeRoomCustChanged();
    #endregion
		
		public Individual()
		{
			this._ITypeRoomCust1 = default(EntityRef<ITypeRoomCust>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndividualID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IndividualID
		{
			get
			{
				return this._IndividualID;
			}
			set
			{
				if ((this._IndividualID != value))
				{
					this.OnIndividualIDChanging(value);
					this.SendPropertyChanging();
					this._IndividualID = value;
					this.SendPropertyChanged("IndividualID");
					this.OnIndividualIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(20)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITypeRoomCust", DbType="Int")]
		public System.Nullable<int> ITypeRoomCust
		{
			get
			{
				return this._ITypeRoomCust;
			}
			set
			{
				if ((this._ITypeRoomCust != value))
				{
					if (this._ITypeRoomCust1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITypeRoomCustChanging(value);
					this.SendPropertyChanging();
					this._ITypeRoomCust = value;
					this.SendPropertyChanged("ITypeRoomCust");
					this.OnITypeRoomCustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITypeRoomCust_Individual", Storage="_ITypeRoomCust1", ThisKey="ITypeRoomCust", OtherKey="TypeID", IsForeignKey=true)]
		public ITypeRoomCust ITypeRoomCust1
		{
			get
			{
				return this._ITypeRoomCust1.Entity;
			}
			set
			{
				ITypeRoomCust previousValue = this._ITypeRoomCust1.Entity;
				if (((previousValue != value) 
							|| (this._ITypeRoomCust1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITypeRoomCust1.Entity = null;
						previousValue.Individuals.Remove(this);
					}
					this._ITypeRoomCust1.Entity = value;
					if ((value != null))
					{
						value.Individuals.Add(this);
						this._ITypeRoomCust = value.TypeID;
					}
					else
					{
						this._ITypeRoomCust = default(Nullable<int>);
					}
					this.SendPropertyChanged("ITypeRoomCust1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IBooking")]
	public partial class IBooking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookingID;
		
		private string _Surname;
		
		private string _OtherNames;
		
		private string _Email;
		
		private System.Nullable<int> _PhoneNum;
		
		private System.Nullable<System.DateTime> _ArrivalDate;
		
		private System.Nullable<System.TimeSpan> _ArrivalTime;
		
		private System.Nullable<System.DateTime> _DepatureDate;
		
		private System.Nullable<System.TimeSpan> _DepartureTime;
		
		private System.Nullable<int> _NumberOfAdults;
		
		private System.Nullable<int> _NoOfNights;
		
		private string _RoomNum;
		
		private string _ClientType;
		
		private string _Selected;
		
		private System.Nullable<decimal> _RCost;
		
		private string _Status;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<decimal> _DepositedAmount;
		
		private System.Nullable<int> _ChequeNum;
		
		private System.Nullable<decimal> _RoomRate;
		
		private System.Nullable<bool> _CheckIn;
		
		private System.Nullable<bool> _CheckOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookingIDChanging(int value);
    partial void OnBookingIDChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnOtherNamesChanging(string value);
    partial void OnOtherNamesChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumChanging(System.Nullable<int> value);
    partial void OnPhoneNumChanged();
    partial void OnArrivalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnArrivalDateChanged();
    partial void OnArrivalTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnArrivalTimeChanged();
    partial void OnDepatureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDepatureDateChanged();
    partial void OnDepartureTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDepartureTimeChanged();
    partial void OnNumberOfAdultsChanging(System.Nullable<int> value);
    partial void OnNumberOfAdultsChanged();
    partial void OnNoOfNightsChanging(System.Nullable<int> value);
    partial void OnNoOfNightsChanged();
    partial void OnRoomNumChanging(string value);
    partial void OnRoomNumChanged();
    partial void OnClientTypeChanging(string value);
    partial void OnClientTypeChanged();
    partial void OnSelectedChanging(string value);
    partial void OnSelectedChanged();
    partial void OnRCostChanging(System.Nullable<decimal> value);
    partial void OnRCostChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnDepositedAmountChanging(System.Nullable<decimal> value);
    partial void OnDepositedAmountChanged();
    partial void OnChequeNumChanging(System.Nullable<int> value);
    partial void OnChequeNumChanged();
    partial void OnRoomRateChanging(System.Nullable<decimal> value);
    partial void OnRoomRateChanged();
    partial void OnCheckInChanging(System.Nullable<bool> value);
    partial void OnCheckInChanged();
    partial void OnCheckOutChanging(System.Nullable<bool> value);
    partial void OnCheckOutChanged();
    #endregion
		
		public IBooking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookingID
		{
			get
			{
				return this._BookingID;
			}
			set
			{
				if ((this._BookingID != value))
				{
					this.OnBookingIDChanging(value);
					this.SendPropertyChanging();
					this._BookingID = value;
					this.SendPropertyChanged("BookingID");
					this.OnBookingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherNames", DbType="NChar(50)")]
		public string OtherNames
		{
			get
			{
				return this._OtherNames;
			}
			set
			{
				if ((this._OtherNames != value))
				{
					this.OnOtherNamesChanging(value);
					this.SendPropertyChanging();
					this._OtherNames = value;
					this.SendPropertyChanged("OtherNames");
					this.OnOtherNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="Int")]
		public System.Nullable<int> PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalDate", DbType="Date")]
		public System.Nullable<System.DateTime> ArrivalDate
		{
			get
			{
				return this._ArrivalDate;
			}
			set
			{
				if ((this._ArrivalDate != value))
				{
					this.OnArrivalDateChanging(value);
					this.SendPropertyChanging();
					this._ArrivalDate = value;
					this.SendPropertyChanged("ArrivalDate");
					this.OnArrivalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrivalTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> ArrivalTime
		{
			get
			{
				return this._ArrivalTime;
			}
			set
			{
				if ((this._ArrivalTime != value))
				{
					this.OnArrivalTimeChanging(value);
					this.SendPropertyChanging();
					this._ArrivalTime = value;
					this.SendPropertyChanged("ArrivalTime");
					this.OnArrivalTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepatureDate", DbType="Date")]
		public System.Nullable<System.DateTime> DepatureDate
		{
			get
			{
				return this._DepatureDate;
			}
			set
			{
				if ((this._DepatureDate != value))
				{
					this.OnDepatureDateChanging(value);
					this.SendPropertyChanging();
					this._DepatureDate = value;
					this.SendPropertyChanged("DepatureDate");
					this.OnDepatureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartureTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> DepartureTime
		{
			get
			{
				return this._DepartureTime;
			}
			set
			{
				if ((this._DepartureTime != value))
				{
					this.OnDepartureTimeChanging(value);
					this.SendPropertyChanging();
					this._DepartureTime = value;
					this.SendPropertyChanged("DepartureTime");
					this.OnDepartureTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfAdults", DbType="Int")]
		public System.Nullable<int> NumberOfAdults
		{
			get
			{
				return this._NumberOfAdults;
			}
			set
			{
				if ((this._NumberOfAdults != value))
				{
					this.OnNumberOfAdultsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfAdults = value;
					this.SendPropertyChanged("NumberOfAdults");
					this.OnNumberOfAdultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfNights", DbType="Int")]
		public System.Nullable<int> NoOfNights
		{
			get
			{
				return this._NoOfNights;
			}
			set
			{
				if ((this._NoOfNights != value))
				{
					this.OnNoOfNightsChanging(value);
					this.SendPropertyChanging();
					this._NoOfNights = value;
					this.SendPropertyChanged("NoOfNights");
					this.OnNoOfNightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNum", DbType="NChar(50)")]
		public string RoomNum
		{
			get
			{
				return this._RoomNum;
			}
			set
			{
				if ((this._RoomNum != value))
				{
					this.OnRoomNumChanging(value);
					this.SendPropertyChanging();
					this._RoomNum = value;
					this.SendPropertyChanged("RoomNum");
					this.OnRoomNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="NChar(50)")]
		public string ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selected", DbType="NChar(30)")]
		public string Selected
		{
			get
			{
				return this._Selected;
			}
			set
			{
				if ((this._Selected != value))
				{
					this.OnSelectedChanging(value);
					this.SendPropertyChanging();
					this._Selected = value;
					this.SendPropertyChanged("Selected");
					this.OnSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RCost
		{
			get
			{
				return this._RCost;
			}
			set
			{
				if ((this._RCost != value))
				{
					this.OnRCostChanging(value);
					this.SendPropertyChanging();
					this._RCost = value;
					this.SendPropertyChanged("RCost");
					this.OnRCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositedAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DepositedAmount
		{
			get
			{
				return this._DepositedAmount;
			}
			set
			{
				if ((this._DepositedAmount != value))
				{
					this.OnDepositedAmountChanging(value);
					this.SendPropertyChanging();
					this._DepositedAmount = value;
					this.SendPropertyChanged("DepositedAmount");
					this.OnDepositedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNum", DbType="Int")]
		public System.Nullable<int> ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomRate", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> RoomRate
		{
			get
			{
				return this._RoomRate;
			}
			set
			{
				if ((this._RoomRate != value))
				{
					this.OnRoomRateChanging(value);
					this.SendPropertyChanging();
					this._RoomRate = value;
					this.SendPropertyChanged("RoomRate");
					this.OnRoomRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckIn", DbType="Bit")]
		public System.Nullable<bool> CheckIn
		{
			get
			{
				return this._CheckIn;
			}
			set
			{
				if ((this._CheckIn != value))
				{
					this.OnCheckInChanging(value);
					this.SendPropertyChanging();
					this._CheckIn = value;
					this.SendPropertyChanged("CheckIn");
					this.OnCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckOut", DbType="Bit")]
		public System.Nullable<bool> CheckOut
		{
			get
			{
				return this._CheckOut;
			}
			set
			{
				if ((this._CheckOut != value))
				{
					this.OnCheckOutChanging(value);
					this.SendPropertyChanging();
					this._CheckOut = value;
					this.SendPropertyChanged("CheckOut");
					this.OnCheckOutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IFunction")]
	public partial class IFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FunctionID;
		
		private string _ContactPerson;
		
		private string _Organization;
		
		private string _FunctionName;
		
		private System.Nullable<int> _PhoneNum;
		
		private System.Nullable<System.DateTime> _StartDateFunction;
		
		private System.Nullable<System.DateTime> _EndDateFunction;
		
		private string _Location;
		
		private int _ResidentialNum;
		
		private System.Nullable<int> _NRnum;
		
		private System.Nullable<decimal> _DepositedAmount;
		
		private System.Nullable<decimal> _ChequeNum;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _CustomerNumber;
		
		private string _PaymentType;
		
		private EntitySet<HiredFacility> _HiredFacilities;
		
		private EntitySet<Xtra> _Xtras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFunctionIDChanging(int value);
    partial void OnFunctionIDChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnOrganizationChanging(string value);
    partial void OnOrganizationChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnPhoneNumChanging(System.Nullable<int> value);
    partial void OnPhoneNumChanged();
    partial void OnStartDateFunctionChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateFunctionChanged();
    partial void OnEndDateFunctionChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateFunctionChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnResidentialNumChanging(int value);
    partial void OnResidentialNumChanged();
    partial void OnNRnumChanging(System.Nullable<int> value);
    partial void OnNRnumChanged();
    partial void OnDepositedAmountChanging(System.Nullable<decimal> value);
    partial void OnDepositedAmountChanged();
    partial void OnChequeNumChanging(System.Nullable<decimal> value);
    partial void OnChequeNumChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    #endregion
		
		public IFunction()
		{
			this._HiredFacilities = new EntitySet<HiredFacility>(new Action<HiredFacility>(this.attach_HiredFacilities), new Action<HiredFacility>(this.detach_HiredFacilities));
			this._Xtras = new EntitySet<Xtra>(new Action<Xtra>(this.attach_Xtras), new Action<Xtra>(this.detach_Xtras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FunctionID
		{
			get
			{
				return this._FunctionID;
			}
			set
			{
				if ((this._FunctionID != value))
				{
					this.OnFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._FunctionID = value;
					this.SendPropertyChanged("FunctionID");
					this.OnFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NChar(50)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization", DbType="NChar(50)")]
		public string Organization
		{
			get
			{
				return this._Organization;
			}
			set
			{
				if ((this._Organization != value))
				{
					this.OnOrganizationChanging(value);
					this.SendPropertyChanging();
					this._Organization = value;
					this.SendPropertyChanged("Organization");
					this.OnOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NChar(50)")]
		public string FunctionName
		{
			get
			{
				return this._FunctionName;
			}
			set
			{
				if ((this._FunctionName != value))
				{
					this.OnFunctionNameChanging(value);
					this.SendPropertyChanging();
					this._FunctionName = value;
					this.SendPropertyChanged("FunctionName");
					this.OnFunctionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="Int")]
		public System.Nullable<int> PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateFunction", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDateFunction
		{
			get
			{
				return this._StartDateFunction;
			}
			set
			{
				if ((this._StartDateFunction != value))
				{
					this.OnStartDateFunctionChanging(value);
					this.SendPropertyChanging();
					this._StartDateFunction = value;
					this.SendPropertyChanged("StartDateFunction");
					this.OnStartDateFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateFunction", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDateFunction
		{
			get
			{
				return this._EndDateFunction;
			}
			set
			{
				if ((this._EndDateFunction != value))
				{
					this.OnEndDateFunctionChanging(value);
					this.SendPropertyChanging();
					this._EndDateFunction = value;
					this.SendPropertyChanged("EndDateFunction");
					this.OnEndDateFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialNum", DbType="Int NOT NULL")]
		public int ResidentialNum
		{
			get
			{
				return this._ResidentialNum;
			}
			set
			{
				if ((this._ResidentialNum != value))
				{
					this.OnResidentialNumChanging(value);
					this.SendPropertyChanging();
					this._ResidentialNum = value;
					this.SendPropertyChanged("ResidentialNum");
					this.OnResidentialNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRnum", DbType="Int")]
		public System.Nullable<int> NRnum
		{
			get
			{
				return this._NRnum;
			}
			set
			{
				if ((this._NRnum != value))
				{
					this.OnNRnumChanging(value);
					this.SendPropertyChanging();
					this._NRnum = value;
					this.SendPropertyChanged("NRnum");
					this.OnNRnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositedAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DepositedAmount
		{
			get
			{
				return this._DepositedAmount;
			}
			set
			{
				if ((this._DepositedAmount != value))
				{
					this.OnDepositedAmountChanging(value);
					this.SendPropertyChanging();
					this._DepositedAmount = value;
					this.SendPropertyChanged("DepositedAmount");
					this.OnDepositedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNum", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ChequeNum
		{
			get
			{
				return this._ChequeNum;
			}
			set
			{
				if ((this._ChequeNum != value))
				{
					this.OnChequeNumChanging(value);
					this.SendPropertyChanging();
					this._ChequeNum = value;
					this.SendPropertyChanged("ChequeNum");
					this.OnChequeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="VarChar(10)")]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(20)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IFunction_HiredFacility", Storage="_HiredFacilities", ThisKey="FunctionID", OtherKey="FunctionID")]
		public EntitySet<HiredFacility> HiredFacilities
		{
			get
			{
				return this._HiredFacilities;
			}
			set
			{
				this._HiredFacilities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IFunction_Xtra", Storage="_Xtras", ThisKey="FunctionID", OtherKey="FunctionID")]
		public EntitySet<Xtra> Xtras
		{
			get
			{
				return this._Xtras;
			}
			set
			{
				this._Xtras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HiredFacilities(HiredFacility entity)
		{
			this.SendPropertyChanging();
			entity.IFunction = this;
		}
		
		private void detach_HiredFacilities(HiredFacility entity)
		{
			this.SendPropertyChanging();
			entity.IFunction = null;
		}
		
		private void attach_Xtras(Xtra entity)
		{
			this.SendPropertyChanging();
			entity.IFunction = this;
		}
		
		private void detach_Xtras(Xtra entity)
		{
			this.SendPropertyChanging();
			entity.IFunction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xtras")]
	public partial class Xtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExtrasID;
		
		private string _SelectedService;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<int> _Pax;
		
		private System.Nullable<int> _FunctionID;
		
		private EntityRef<IFunction> _IFunction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExtrasIDChanging(int value);
    partial void OnExtrasIDChanged();
    partial void OnSelectedServiceChanging(string value);
    partial void OnSelectedServiceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnPaxChanging(System.Nullable<int> value);
    partial void OnPaxChanged();
    partial void OnFunctionIDChanging(System.Nullable<int> value);
    partial void OnFunctionIDChanged();
    #endregion
		
		public Xtra()
		{
			this._IFunction = default(EntityRef<IFunction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtrasID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExtrasID
		{
			get
			{
				return this._ExtrasID;
			}
			set
			{
				if ((this._ExtrasID != value))
				{
					this.OnExtrasIDChanging(value);
					this.SendPropertyChanging();
					this._ExtrasID = value;
					this.SendPropertyChanged("ExtrasID");
					this.OnExtrasIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectedService", DbType="NChar(50)")]
		public string SelectedService
		{
			get
			{
				return this._SelectedService;
			}
			set
			{
				if ((this._SelectedService != value))
				{
					this.OnSelectedServiceChanging(value);
					this.SendPropertyChanging();
					this._SelectedService = value;
					this.SendPropertyChanged("SelectedService");
					this.OnSelectedServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pax", DbType="Int")]
		public System.Nullable<int> Pax
		{
			get
			{
				return this._Pax;
			}
			set
			{
				if ((this._Pax != value))
				{
					this.OnPaxChanging(value);
					this.SendPropertyChanging();
					this._Pax = value;
					this.SendPropertyChanged("Pax");
					this.OnPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionID", DbType="Int")]
		public System.Nullable<int> FunctionID
		{
			get
			{
				return this._FunctionID;
			}
			set
			{
				if ((this._FunctionID != value))
				{
					if (this._IFunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._FunctionID = value;
					this.SendPropertyChanged("FunctionID");
					this.OnFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IFunction_Xtra", Storage="_IFunction", ThisKey="FunctionID", OtherKey="FunctionID", IsForeignKey=true)]
		public IFunction IFunction
		{
			get
			{
				return this._IFunction.Entity;
			}
			set
			{
				IFunction previousValue = this._IFunction.Entity;
				if (((previousValue != value) 
							|| (this._IFunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IFunction.Entity = null;
						previousValue.Xtras.Remove(this);
					}
					this._IFunction.Entity = value;
					if ((value != null))
					{
						value.Xtras.Add(this);
						this._FunctionID = value.FunctionID;
					}
					else
					{
						this._FunctionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("IFunction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
